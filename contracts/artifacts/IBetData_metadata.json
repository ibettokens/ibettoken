{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ibetTokenContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "year",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "month",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "day",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "hour",
						"type": "uint16"
					},
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "val",
						"type": "uint256"
					}
				],
				"name": "addOpenBetByValue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "val",
						"type": "uint256"
					}
				],
				"name": "addPendingArbitrationByValue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "queue",
						"type": "uint32"
					},
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					}
				],
				"name": "addPendingArbitrationQueueMapKey",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "outcomeKey",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "arbitrator",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "outcome",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "stake",
								"type": "uint256"
							}
						],
						"internalType": "struct Lib.SubmittedOutCome",
						"name": "outcome",
						"type": "tuple"
					}
				],
				"name": "addSubmittedOutcome",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "authorizeCaller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "deAuthorizeCaller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					}
				],
				"name": "deletePendingArbitrationQueue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "queue",
						"type": "uint32"
					}
				],
				"name": "deletePendingArbitrationQueueMap",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getActiveArbitratorCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getArbitrationComplexityIndex",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "getBet",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint16",
								"name": "version",
								"type": "uint16"
							},
							{
								"internalType": "bytes32",
								"name": "betKey",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "eventText",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "eventTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "betType",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "arbitrationType",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "escrowBalance",
								"type": "uint256"
							}
						],
						"internalType": "struct Lib.Bet",
						"name": "bet",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "getBetProperty",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaxServiceTokensCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getMyBetKeys",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "year",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "month",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "day",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "hour",
						"type": "uint16"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getOpenBetAtIndex",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "year",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "month",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "day",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "hour",
						"type": "uint16"
					}
				],
				"name": "getOpenBetsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getPendingArbitrationAtIndex",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					}
				],
				"name": "getPendingArbitrationCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "queue",
						"type": "uint32"
					}
				],
				"name": "getPendingArbitrationQueueMapKey",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getServiceTokensDisbursedCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "submittedOutcomeKey",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					}
				],
				"name": "getSubmittedOutComeProperty",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "getSubmittedOutComes",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "outcomeKey",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "arbitrator",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "outcome",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "stake",
								"type": "uint256"
							}
						],
						"internalType": "struct Lib.SubmittedOutCome[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "getSubmittedOutComesCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalBetSoFar",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "incrementTotalBetCountSoFar",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					}
				],
				"name": "isOutcomeSubmittedBySubmitter",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					}
				],
				"name": "markSubmitterOutcomeSubmitted",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "year",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "month",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "day",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "hour",
						"type": "uint16"
					},
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "removeOpenBetByValue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "queueKey",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "removePendingArbitrationByValue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "rewardAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "reward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					}
				],
				"name": "safeAddBetsToAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint16",
								"name": "version",
								"type": "uint16"
							},
							{
								"internalType": "bytes32",
								"name": "betKey",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "eventText",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "eventTime",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "betType",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "arbitrationType",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "escrowBalance",
								"type": "uint256"
							}
						],
						"internalType": "struct Lib.Bet",
						"name": "bet",
						"type": "tuple"
					}
				],
				"name": "saveBet",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "betKey",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "saveBetProperty",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "submittedOutcomeKey",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "key",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "saveSubmittedOutComeProperty",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "toAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFromEscrow",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferToEscrow",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_activeArbitratorCounter",
						"type": "uint256"
					}
				],
				"name": "updateActiveArbitratorCounter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "complexityIndex",
						"type": "uint32"
					}
				],
				"name": "updateArbitrationComplexityIndex",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_totalBetSoFar",
						"type": "uint256"
					}
				],
				"name": "updateTotalBetSoFar",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IBetData.sol": "IBetData"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b",
			"license": "MIT",
			"urls": [
				"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd",
				"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd",
				"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072",
			"license": "MIT",
			"urls": [
				"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45",
				"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013",
				"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b",
			"license": "MIT",
			"urls": [
				"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6",
				"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N"
			]
		},
		"contracts/IBet.sol": {
			"keccak256": "0x0c127678f93f9a972e3807a7f7df2278fd87069379e10451722af93ef5b56033",
			"license": "MIT",
			"urls": [
				"bzz-raw://563a3c1a8da0c67b863edb7fa0accc66645f984b08ab28463d20a213e19e9463",
				"dweb:/ipfs/QmWb2nKrtePzDPGiTnV8S7ooxqeCNd6oRh1cG2zy8Uk6Mm"
			]
		},
		"contracts/IBetData.sol": {
			"keccak256": "0xb2e05fda69121e5f3c647d25811a4aba60e96839c4b842d924cea64a84e84715",
			"license": "MIT",
			"urls": [
				"bzz-raw://ed62b9da00b33c87b72229059589a0a9f4bcfb32cb7d7c92d3ff5bb83d6a3619",
				"dweb:/ipfs/Qme8YDJ9bmShdRdxVJBMZrNDy5ABLKoSaVpNe9MqoE39tt"
			]
		},
		"contracts/Lib.sol": {
			"keccak256": "0xef2ea74e3800edf35654f745bcf64468b758d80333e68822cb44158199fb3f4b",
			"license": "MIT",
			"urls": [
				"bzz-raw://89343c51dcc26ac236c63696a591d7536ebeb055cac658fbc093ab3f5a481f18",
				"dweb:/ipfs/QmYricsGCW4HNuq3qgTgVWYHXZUNGW6P9MwMQ8PUAst2s1"
			]
		}
	},
	"version": 1
}